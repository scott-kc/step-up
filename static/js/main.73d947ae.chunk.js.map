{"version":3,"sources":["router/Routes.js","login/SignIn.js","login/SignUpPrompt.js","login/Opening.js","router/Navigation.js","home/DailyCount.js","user/User.js","home/GoalProgress.js","user/Goal.js","user/UserHeading.js","home/Home.js","user/StepEntry.js","history/StepChart.js","history/AverageSteps.js","history/PersonalRecord.js","history/History.js","login/ResetPassword.js","login/SignUp.js","settings/ConfigItem.js","settings/Settings.js","router/StepUpRouter.js","repository/UserRepository.js","user/UserService.js","user/UserServiceFactory.js","pedometer/Pedometer.js","App.js","serviceWorker.js","index.js"],"names":["HISTORY_ROUTE","HOME_ROUTE","SIGN_UP_ROUTE","SETTINGS_ROUTE","SignIn","props","state","user","emailInput","React","createRef","passwordInput","e","preventDefault","this","userService","signIn","value","catch","console","log","updatedUser","setState","history","push","Row","Col","Form","onSubmit","handleSubmit","Group","controlId","Label","Control","type","placeholder","required","ref","Button","variant","href","Component","SignUpPrompt","to","Opening","Navigation","icon","faHome","faChartBar","faCog","DailyCount","percentage","text","steps","DEFAULT_GOAL","userFrom","name","email","password","goal","GoalProgress","p","ratio","stepsToGoal","enrichProps","circleRatio","Popover","id","PopoverTitle","as","PopoverContent","Goal","getGoal","bind","Number","isInteger","className","Overlay","UserHeading","getName","Home","sm","stepEntry","stepEntryUsing","Date","date","stepCount","stepEntryFrom","entry","mockStepEntries","dateMinusDays","days","day","getDate","setDate","extractUserData","Array","isArray","filter","isValidEntry","map","toDatum","data","x","getDay","y","StepChart","height","width","xType","margin","left","reducer","sum","AverageSteps","average","length","reduce","toPrecision","averageStepEntries","PersonalRecord","pr","calulatePr","History","ResetPassword","event","form","currentTarget","resetPassword","formBasicEmail","formBasicPassword","Text","sneakyThrows","Error","SignUp","nameInput","signUp","alert","OPENING_ROUTE","onClick","ConfigItem","label","onChange","handleChange","DEFAULT_DATA_RENTENTION_IN_DAYS","Settings","dataRetention","handleGoalChange","handleGoalSubmit","handleRetentionChange","handleRetentionSubmit","target","save","StepUpRouter","basename","process","exact","path","render","routes","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","UserRepository","firebase","db","collection","doc","set","saved","get","toJSON","ensureEmailAndPassword","isEmpty","validateCredentials","credentials","s","UserService","userRepository","findByEmail","numberOfDays","slice","getUserServiceInstance","incrementUserStepCount","entryCopy","increment","getLatestStepEntry","DEVICE_STEP_EVENT_TYPE","App","registerStep","window","addEventListener","alpha","beta","gamma","Container","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","document","getElementById","URL","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"uOAAMA,EAAgB,WAChBC,EAAa,QAEbC,EAAgB,WAGhBC,EAAiB,Y,4DCuDRC,E,YAxDX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAMF,EAAME,MAEhB,EAAKC,WAAaC,IAAMC,YACxB,EAAKC,cAAgBF,IAAMC,YANZ,E,mHASAE,G,8EACfA,EAAEC,iB,SACwBC,KAAKR,MAAMS,YAChCC,OAAOF,KAAKN,WAAWS,MAAOH,KAAKH,cAAcM,OACjDC,OAAM,SAAAN,GAEH,OADAO,QAAQC,IAAIR,GACL,Q,OAJTS,E,OAMNP,KAAKQ,UAAS,SAAAhB,GAAK,MAAK,CACpBC,KAAMc,MAEVP,KAAKT,MAAMkB,QAAQC,KAAKvB,G,sIAGlB,IAAD,OACL,OACI,kBAACwB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,SAAUd,KAAKe,cACjB,kBAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,kBAClB,kBAACJ,EAAA,EAAKK,MAAN,sBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,QACLC,YAAY,cACZC,UAAQ,EACRC,IAAK,SAACA,GACF,EAAK7B,WAAa6B,MAGxC,kBAACV,EAAA,EAAKG,MAAN,CAAYC,UAAU,qBAClB,kBAACJ,EAAA,EAAKK,MAAN,iBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRC,IAAK,SAACA,GACF,EAAK1B,cAAgB0B,MAG3C,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAMvC,EAAYiC,KAAK,UAAjD,iB,GA/CHO,aCYNC,MAXf,WACI,OACI,kBAACjB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,uDACA,kBAAC,IAAD,CAAMiB,GAAIzC,GAAV,cCmBD0C,E,YArBX,WAAYvC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAMF,EAAME,MAHD,E,sEAQf,OACI,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,sCACA,kBAAC,EAAD,CAAQnB,KAAMO,KAAKR,MAAMC,OACzB,kBAAC,IAAD,CAAMoC,GHhBG,mBGgBT,oBACA,kBAAC,EAAD,Y,GAfEF,a,gBCsDPI,MAvDf,WACI,OACI,kBAACpB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACY,EAAA,EAAD,CAAQE,KAAMvC,EAAYsC,QAAQ,SAC9B,kBAACd,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAiBoB,KAAMC,OAE3B,kBAACrB,EAAA,EAAD,kBAQpB,kBAACA,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACY,EAAA,EAAD,CAAQE,KAAMxC,EAAeuC,QAAQ,SACjC,kBAACd,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAiBoB,KAAME,OAE3B,kBAACtB,EAAA,EAAD,qBAQpB,kBAACA,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACY,EAAA,EAAD,CAAQE,KAAMrC,EAAgBoC,QAAQ,SAClC,kBAACd,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAiBoB,KAAMG,OAE3B,kBAACvB,EAAA,EAAD,wB,gBCxCjBwB,MANf,SAAoB7C,GAChB,OACI,kBAAC,IAAD,CAAqB8C,WAAY,IAAKC,KAAM/C,EAAMgD,SCLpDC,EAAe,IAuBrB,SAASC,EAAShD,GAId,OAHKA,IACDA,EAAO,IAEJ,CACHiD,KAAMjD,EAAKiD,KACXC,MAAOlD,EAAKkD,MACZC,SAAUnD,EAAKmD,SACfC,KAAMpD,EAAKoD,KACXN,MAAO9C,EAAK8C,OCTLO,MARf,SAAsBvD,GAClB,IAAMwD,EAZV,SAAqBxD,GACjB,IAAMgD,EAAQhD,EAAMgD,MAAQhD,EAAMgD,MAAQ,EACpCM,EAAOtD,EAAMsD,KAAOtD,EAAMsD,KAAOL,EACvC,MAAO,CACHD,MAAOA,EACPM,KAAMA,EACNG,MAAOT,EAAQM,EACfI,YAAaJ,EAAON,GAKdW,CAAY3D,GACtB,OACI,kBAAC,IAAD,CAAqB8C,WAAYU,EAAEC,MAAOV,KAAMS,EAAEE,YAC7BE,YAAaJ,EAAEC,MAAO7C,MAAO4C,EAAEF,Q,kCCXxD,kBAACO,EAAA,EAAD,CAASC,GAAG,iBACR,kBAACC,EAAA,EAAD,CAAcC,GAAG,MAAjB,yBACA,kBAACC,EAAA,EAAD,2FACuF,kBAAC,IAAD,CACnF3B,GAAIxC,GAD+E,YADvF,MA2COoE,M,YAnCX,WAAYlE,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAMF,EAAME,KACZoD,KAAM,MAEV,EAAKa,QAAU,EAAKA,QAAQC,KAAb,gBANA,E,uEAWf,OAmBad,EAnBM7C,KAAK6C,OAoBbe,OAAOC,UAAUhB,GApBI7C,KAAK6C,KAAOL,EAmBpD,IAAqBK,I,+BAdb,OACI,kBAAClC,EAAA,EAAD,CAAKmD,UAAW,IACZ,kBAAClD,EAAA,EAAD,CAAKkD,UAAW,IACZ,sCACW9D,KAAK0D,WAEhB,kBAACK,EAAA,EAAD,Y,GAvBDpC,aC4BJqC,E,YAvCX,WAAYzE,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAMF,EAAME,MAEhB,EAAKwE,QAAU,EAAKA,QAAQN,KAAb,gBALA,E,uEASf,OAAO3D,KAAKR,OAASQ,KAAKR,MAAMkD,KAAO1C,KAAKR,MAAMkD,KAAO,U,+BAIzD,OACI,kBAAC/B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKkD,UAAW,OACZ,kBAACnD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACIZ,KAAKiE,YAGb,kBAACtD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,CAAMnB,KAAMO,KAAKR,MAAMC,UAInC,kBAACmB,EAAA,EAAD,CAAKkD,UAAW,QACZ,kBAACtC,EAAA,EAAD,CAAQE,KTlCd,KSkCM,oB,GA/BFC,aCkDXuC,E,YA1CX,WAAY3E,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAMF,EAAME,MAEhB,EAAKwE,QAAU,EAAKA,QAAQN,KAAb,gBALA,E,uEASf,OAAO3D,KAAKR,OAASQ,KAAKR,MAAMkD,KAAO1C,KAAKR,MAAMkD,KAAO,U,+BAIzD,OACI,kBAAC/B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKkD,UAAW,OACZ,kBAACnD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKkD,UAAW,OACZ,kBAAC,EAAD,CAAarE,KAAMO,KAAKR,MAAMC,SAGtC,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKuD,GAAI,EAAGL,UAAW,YACnB,kBAAC,EAAD,CAAcjB,KA3BzB,IA2ByCN,MA1BxC,SA6BE,kBAAC5B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKuD,GAAI,EAAGL,UAAW,4BACnB,kBAAC,EAAD,CAAYvB,MA/BtB,SAkCE,kBAAC5B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKkD,UAAW,OACZ,kBAAC,EAAD,c,GAlCTnC,a,QCZnB,SAASyC,IACL,OAAOC,EAAe,IAAIC,KAAQ,GAGtC,SAASD,EAAeE,EAAMC,GAC1B,MAAO,CACHD,KAAMA,EACNC,UAAWA,GAInB,SAASC,EAAcC,GACnB,OAAKA,EAGM,CACHH,KAAMG,EAAMH,KAAOG,EAAMH,KAAO,IAAID,KACpCE,UAAWE,EAAMF,UAAYE,EAAMF,UAAY,GAJ5CJ,ICTf,IAAMO,EAAkB,CACpBN,EAAeO,EAAc,GAAI,MACjCP,EAAeO,EAAc,GAAI,MACjCP,EAAeO,EAAc,GAAI,MACjCP,EAAeO,EAAc,GAAI,MACjCP,EAAeO,EAAc,GAAI,MACjCP,EAAeO,EAAc,GAAI,MACjCP,EAAeO,EAAc,GAAI,OAGrC,SAASA,EAAcC,GACnB,IAAIN,EAAO,IAAID,KACXQ,EAAMP,EAAKQ,UAEf,OADAR,EAAKS,QAAQF,EAAMD,GACZN,EAGX,IAAMM,EAAO,CAAC,MAAO,MAAO,OAAQ,MAAO,QAAS,MAAO,OAkB3D,SAASI,EAAgB1C,GACrB,OAAO2C,MAAMC,QAAQ5C,GACjBA,EAAM6C,OAAOC,GAAcC,IAAIC,GAAW,GAGlD,IAAMF,EAAe,SAAAvF,GAAC,OAAIA,GAAKA,EAAEyE,MAAQzE,EAAE0E,WAErCe,EAAU,SAACb,GACb,IAAIc,EACE,CAACC,EAAGZ,EAAKH,EAAMH,KAAKmB,UAAWC,EAAGjB,EAAMF,WAE9C,OADAnE,QAAQC,IAAIkF,GACLA,GAGII,GA9Bf,SAAmBrG,GACf,IAAIgD,EAAQhD,EAAMgD,MAAQhD,EAAMgD,MAAQoC,EACxC,OACI,qCAEI,kBAAC,IAAD,CAAQkB,OAAQ,IAAKC,MAAO,IAAKC,MAAM,UAC/BC,OAAQ,CAACC,KAAM,KACnB,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAmBT,KAAMP,EAAgB1C,QC7BnD2D,GAAU,SAACC,EAAKhG,GAAN,OAAgBgG,EAAMhG,GAEhCkF,GAAe,SAAAvF,GAAC,OAAIA,GAAKA,EAAE0E,WAiClB4B,OApBf,SAAsB7G,GAClB,IAAM8G,EAXV,SAA4B9D,GACxB,IAAM8D,EAAUnB,MAAMC,QAAQ5C,IAAUA,EAAM+D,OAAS,EACjD/D,EAAM6C,OAAOC,IACdC,KAAI,SAAAxF,GAAC,OAAIA,EAAE0E,aACX+B,OAAOL,GAAS,GAAK3D,EAAM+D,OAC1B,EAEN,OADAjG,QAAQC,IAAI+F,GACLA,EAAQG,YAAY,GAIXC,CAAmBlH,EAAMgD,OACzC,OACI,kBAAC5B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKkD,UAAU,gBAAf,kBAIJ,kBAACnD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAqB0B,KAAM+D,SC3B7CH,GAAU,SAACT,EAAGE,GAAJ,OAAUF,EAAIE,EAAIF,EAAIE,GAEhCN,GAAe,SAAAvF,GAAC,OAAIA,GAAKA,EAAE0E,WAiClBkC,OApBf,SAAwBnH,GACpB,IAAMoH,EAXV,SAAoBpE,GAChB,IAAM8D,EAAUnB,MAAMC,QAAQ5C,IAAUA,EAAM+D,OAAS,EACjD/D,EAAM6C,OAAOC,IACVC,KAAI,SAAAxF,GAAC,OAAIA,EAAE0E,aACX+B,OAAOL,GAAS,GACnB,EAEN,OADA7F,QAAQC,IAAI+F,GACLA,EAAQG,YAAY,GAIhBI,CAAWrH,EAAMgD,OAC5B,OACI,kBAAC5B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKkD,UAAU,gBAAf,oBAIJ,kBAACnD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAqB0B,KAAMqE,SCmBpCE,G,YAxCX,WAAYtH,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAMF,EAAME,MAHD,E,sEAQf,OACI,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKkD,UAAW,WACZ,kBAACnD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,CAAanB,KAAMO,KAAKR,MAAMC,SAGtC,kBAACkB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKkD,UAAW,OACZ,kBAAC,GAAD,QAGR,kBAACnD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKuD,GAAI,EAAGL,UAAW,YACnB,kBAAC,GAAD,CAAcvB,MAAOvC,KAAKR,MAAMC,KAAK8C,SAEzC,kBAAC3B,EAAA,EAAD,CAAKuD,GAAI,EAAGL,UAAW,YACnB,kBAAC,GAAD,CAAgBvB,MAAOvC,KAAKR,MAAMC,KAAK8C,UAG/C,kBAAC5B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKkD,UAAW,OACZ,kBAAC,EAAD,c,GAhCNnC,aCwCPmF,G,YA5CX,WAAYvH,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAMF,EAAME,KACZQ,YAAaV,EAAMU,aAEvB,EAAKc,aAAe,EAAKA,aAAa4C,KAAlB,gBANL,E,mHASAoD,G,gFACTC,EAAOD,EAAME,c,SACOjH,KAAKC,YAAYiH,cAAcF,EAAKG,eAAgBH,EAAKI,mB,OAA7E7G,E,OACNP,KAAKQ,UAAS,SAAAhB,GAAK,MAAK,CACpBC,KAAMc,M,sIAKV,OACI,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,gEACA,kBAACC,EAAA,EAAD,CAAMC,SAAUd,KAAKe,cACjB,kBAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,kBAClB,kBAACJ,EAAA,EAAKK,MAAN,sBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,QAAQC,YAAY,cAAcC,UAAQ,IAC7D,kBAACT,EAAA,EAAKwG,KAAN,CAAWvD,UAAU,cAArB,yEAIJ,kBAACjD,EAAA,EAAKG,MAAN,CAAYC,UAAU,qBAClB,kBAACJ,EAAA,EAAKK,MAAN,iBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,WAAWC,YAAY,WAAWC,UAAQ,KAEjE,kBAACE,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KhBrC5B,IgBqCiDN,KAAK,UAApD,yB,GAnCIO,aC2E5B,SAAS2F,KACL,MAAMC,MAAM,iDAIDC,O,YA/EX,WAAYjI,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAMF,EAAME,KACZQ,YAAaV,EAAMU,YAAcV,EAAMU,YAAcqH,MAEzD,EAAKG,UAAY9H,IAAMC,YACvB,EAAKF,WAAaC,IAAMC,YACxB,EAAKC,cAAgBF,IAAMC,YAC3B,EAAKmB,aAAe,EAAKA,aAAa4C,KAAlB,gBATL,E,mHAYA7D,G,uFAEWE,KAAKR,MAAMS,YAChCyH,OAAO1H,KAAKyH,UAAUtH,MAAOH,KAAKN,WAAWS,MAAOH,KAAKH,cAAcM,OACvEC,OAAM,SAAAN,GACHO,QAAQC,IAAIR,M,QAHdS,E,QAMFP,KAAKQ,UAAS,SAAAhB,GAAK,MAAK,CACpBC,KAAMc,MAGVoH,MAAM,yCAEV3H,KAAKT,MAAMkB,QAAQC,KAAK,CAACkH,cjB7BX,M,sIiBgCR,IAAD,OACL,OACI,kBAACjH,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,SAAUd,KAAKe,cACjB,kBAACF,EAAA,EAAKG,MAAN,CAAYC,UAAU,YAClB,kBAACJ,EAAA,EAAKK,MAAN,aACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,OACLC,YAAY,kBACZC,UAAQ,EACRC,IAAK,SAACA,GACF,EAAKkG,UAAYlG,MAGvC,kBAACV,EAAA,EAAKG,MAAN,CAAYC,UAAU,kBAClB,kBAACJ,EAAA,EAAKK,MAAN,sBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,QACLC,YAAY,cACZC,UAAQ,EACRC,IAAK,SAACA,GACF,EAAK7B,WAAa6B,KAEpC,kBAACV,EAAA,EAAKwG,KAAN,CAAWvD,UAAU,cAArB,yEAIJ,kBAACjD,EAAA,EAAKG,MAAN,CAAYC,UAAU,qBAClB,kBAACJ,EAAA,EAAKK,MAAN,iBACA,kBAACL,EAAA,EAAKM,QAAN,CAAcC,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRC,IAAK,SAACA,GACF,EAAK1B,cAAgB0B,MAG3C,kBAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KjBnE5B,IiBmEiDN,KAAK,SAASyG,QAAS7H,KAAKe,cAA3E,iB,GAjEHY,aCDN,SAASmG,GAAWvI,GAC/B,OACI,kBAACoB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,0BAAME,SAAUvB,EAAMwB,cAClB,kBAACJ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,+BACKrB,EAAMwI,MADX,IAEI,2BAAO3G,KAAK,OAAOjB,MAAOZ,EAAMY,MAAO6H,SAAUzI,EAAM0I,iBAG/D,kBAACrH,EAAA,EAAD,KACI,2BAAOQ,KAAK,SAASjB,MAAM,gBCVvD,IAIM+H,GAAkC,EA8DzBC,G,YA3DX,WAAY5I,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTqD,KAAMtD,EAAME,MAAQF,EAAME,KAAKoD,KAAOtD,EAAME,KAAKoD,KAAOL,EACxD4F,cAAe7I,EAAME,MAAQF,EAAME,KAAK2I,cAAgB7I,EAAME,KAAK2I,cAAgBF,GACnFzI,KAAMF,EAAME,KACZQ,YAAaV,EAAMU,aAGvB,EAAKoI,iBAAmB,EAAKA,iBAAiB1E,KAAtB,gBACxB,EAAK2E,iBAAmB,EAAKA,iBAAiB3E,KAAtB,gBACxB,EAAK4E,sBAAwB,EAAKA,sBAAsB5E,KAA3B,gBAC7B,EAAK6E,sBAAwB,EAAKA,sBAAsB7E,KAA3B,gBAZd,E,8EAeFoD,GACb/G,KAAKQ,SAAS,CAACqC,KAAMkE,EAAM0B,OAAOtI,U,uCAGrB4G,GACbY,MAAM,yBAA2B3H,KAAKR,MAAMqD,MAC5C,IAAItC,EAAckC,EAASzC,KAAKR,MAAMC,MACtCc,EAAYsC,KAAO7C,KAAKR,MAAMqD,KAC9B7C,KAAKC,YAAYyI,KAAKnI,GACtBwG,EAAMhH,mB,4CAGYgH,GAClB/G,KAAKQ,SAAS,CAAC4H,cAAerB,EAAM0B,OAAOtI,U,4CAGzB4G,GAClBY,MAAM,yBAA2B3H,KAAKR,MAAMqD,MAC5C,IAAItC,EAAckC,EAASzC,KAAKR,MAAMC,MACtCc,EAAY6H,cAAgBpI,KAAKR,MAAM4I,cACvCpI,KAAKC,YAAYyI,KAAKnI,GACtBwG,EAAMhH,mB,+BAIN,OACI,kBAACY,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACkH,GAAD,CAAYC,MAlDb,kBAkDgC5H,MAAOH,KAAKR,MAAMqD,KAAM9B,aAAcf,KAAKsI,iBAC9DN,SAAUhI,KAAKqI,mBAC3B,kBAACP,GAAD,CAAYC,MAlDH,iBAkDgC5H,MAAOH,KAAKR,MAAM4I,cAAgB,QAC/DrH,aAAcf,KAAKwI,sBACnBR,SAAUhI,KAAKuI,wBAC3B,kBAAC5H,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKkD,UAAW,OACZ,kBAAC,EAAD,c,GAnDLnC,aCkCvB,SAAS2F,KACL,MAAMC,MAAM,uDAGDoB,O,YArCX,WAAYpJ,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,KAAMF,EAAME,KACZQ,YAAaV,EAAMU,YAAcV,EAAMU,YAAcqH,MAJ1C,E,sEAQT,IAAD,OACL,OACI,kBAAC3G,EAAA,EAAD,CAAKiI,SAAUC,YACX,kBAACjI,EAAA,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkI,OAAK,EAACC,KpBxBf,IoBwB2CC,OAAQ,SAACzJ,GAAD,OAAW,kBAAC,EAAYA,MACzE,kBAAC,IAAD,CAAOwJ,KAAME,EACND,OAAQ,SAACzJ,GAAD,OAAW,kBAAC,GAAD,iBAAYA,EAAZ,CAAmBU,YAAa,EAAKT,MAAMS,kBACrE,kBAAC,IAAD,CAAO8I,KpBzBT,WoB0BSC,OAAQ,SAACzJ,GAAD,OAAW,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBU,YAAa,EAAKT,MAAMS,kBACrE,kBAAC,IAAD,CAAO8I,KpB1BF,kBoB0BqCC,OAAQ,SAACzJ,GAAD,OAAW,kBAAC,GAAkBA,MAChF,kBAAC,IAAD,CAAOwJ,KAAME,EACND,OAAQ,SAACzJ,GAAD,OAAW,kBAAC,EAASA,MACpC,kBAAC,IAAD,CAAOwJ,KAAME,EACND,OAAQ,SAACzJ,GAAD,OAAW,kBAAC,GAAD,iBAAaA,EAAb,CAAoBE,KAAM,EAAKD,MAAMC,WAC/D,kBAAC,IAAD,CAAOsJ,KAAME,EACND,OAAQ,SAACzJ,GAAD,OAAW,kBAAC,GAAD,iBAAcA,EAAd,CAAqBE,KAAM,EAAKD,MAAMC,KAC5BQ,YAAa,EAAKT,MAAMS,yB,GA1BzD0B,a,mBCGrBuH,I,cAAiB,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAsBnB,SAASpE,GAAI7F,GACT,OAAOA,EAAO,CACNiD,KAAMjD,EAAKiD,KACXC,MAAOlD,EAAKkD,MACZC,SAAUnD,EAAKmD,UAEjB,GAGK+G,O,WA1BX,aAAe,oBACXC,iBAAuBV,IACvBlJ,KAAK6J,GAAMD,e,0FAGJnK,G,gFACH+F,EAAOF,GAAI7F,G,SACKO,KAAK6J,GAAGC,WA5BlB,SA4BwCC,IAAItK,EAAKkD,OAAOqH,IAAIxE,G,cAAhEyE,E,OACN5J,QAAQC,IAAI2J,G,kBACLA,G,yIAGCtH,GACR,OAAO3C,KAAK6J,GAAGC,WAlCL,SAkC2BC,IAAIpH,GAAOuH,MAAMC,a,KCgB9D,SAASC,GAAuBzH,EAAOC,GACnC,GAAIyH,GAAQ1H,IAAU0H,GAAQzH,GAC1B,MAAM2E,MAAM,0DAA2D5E,EAAOC,GAItF,SAAS0H,GAAoB7K,EAAM8K,GAC/B,GAAI9K,EAAKmD,WAAa2H,EAAY3H,SAC9B,MAAM2E,MAAM,0DAIpB,SAAS8C,GAAQG,GACb,OAASA,GAAY,KAANA,EAOJC,ICvETxK,GAAc,I,WDFhB,WAAYV,GAAQ,oBAChBS,KAAKP,KAAO,KACZO,KAAK0K,eAAiBnL,EAAMmL,eAAiBnL,EAAMmL,eAmE3D,WACI,MAAMnD,MAAM,yDApE4DD,G,4FAI3D5E,EAAMC,EAAOC,G,8EACtBvC,QAAQC,IAAR,qBAA0BoC,EAA1B,YAAkCC,EAAlC,YAA2CC,IAC3CwH,GAAuBzH,EAAOC,GAC1BnD,EAAO,CAACiD,KAAMA,EAAMC,MAAOA,EAAOC,SAAUA,G,SAC1C5C,KAAK0K,eAAehC,KAAKjJ,G,gCACxBA,G,iLAGEkD,EAAOC,G,8EAChBwH,GAAuBzH,EAAOC,G,SACb5C,KAAK0K,eAAeC,YAAYhI,G,cACjD2H,GADI7K,E,OACsB,CAACmD,SAAUA,I,kBAC9BnD,G,sLAISkD,EAAOC,G,2EACnByH,GAAqB,OAAbzH,G,sBACF2E,MAAM,kD,uBAECvH,KAAK0K,eAAeC,YAAYhI,G,UACpC,QADTlD,E,8BAEM8H,MAAM,iE,cAEhB9H,EAAKmD,SAAWA,E,kBACT5C,KAAK0I,KAAKjJ,I,oIAIhBA,GACD,GAAa,OAATA,EACA,MAAM8H,MAAM,4CAEhB,OAAOvH,KAAK0K,eAAehC,KAAKjJ,K,qCAIrBA,EAAMmL,GACjB,GAAa,OAATnL,EACA,MAAM8H,MAAM,0CAEhB,IAAIhF,EAAQvC,KAAK0K,eAAeC,YAAYlL,EAAKkD,OAAOJ,MACxD,OAAO2C,MAAMC,QAAQ5C,GAASA,EAAMsI,MAAMD,GApDnB,GAoD2E,O,KC9CtF,CAHK,CACrBF,eAAgB,IAAIf,KAQTmB,OAJf,WACI,OAAO7K,ICNX,SAAS8K,GAAuBtL,GACbgD,EAAShD,GAkB5B,SAAmBiF,GACf,IAAIsG,EAAYvG,EAAcC,GAC9BsG,EAAUxG,UAAYwG,EAAUxG,UAAY,EAlBvByG,CAIzB,SAA4BxL,GACxB,GAAIA,GAAQA,EAAK8C,MAAO,CACpB,IAAM+D,EAAS7G,EAAK8C,MAAM+D,OAC1B,OAAO7B,EAAchF,EAAK8C,MAAM+D,EAAS,IAE7C,OAAOlC,IAVW8G,CAAmBzL,ICGzC,IAAM0L,GAAyB,oBAkChBC,G,YA9BX,WAAY7L,GAAQ,IAAD,EAMf,GANe,qBACf,4CAAMA,KACDC,MAAQ,CACTC,KAAM,CAAC8C,MAAO,CAAC6B,MACfnE,YAAa6K,MAEc,OAA3B,EAAKtL,MAAMS,YACX,MAAMsH,MAAM,8CAPD,OASf,EAAK8D,aAAe,EAAKA,aAAa1H,KAAlB,gBACpB2H,OAAOC,iBAAiBJ,IACpB,SAAApE,GAAK,OAAI,EAAKsE,aAAatE,MAXhB,E,0EAcNA,GACT1G,QAAQC,IAAIyG,EAAMyE,MAAQ,MAAQzE,EAAM0E,KAAO,MAAQ1E,EAAM2E,OAC7D1L,KAAKQ,SAAS,CACVf,KAAMsL,GAAuB/K,KAAKR,MAAMC,U,+BAK5C,OACI,kBAACkM,GAAA,EAAD,KACI,kBAAC,GAAD,CAAc1L,YAAaD,KAAKR,MAAMS,YAAaR,KAAMO,KAAKR,MAAMC,Y,GA1BlEkC,aCEZiK,GAAcC,QACW,cAA7BP,OAAOQ,SAASC,UAEe,UAA7BT,OAAOQ,SAASC,UAEhBT,OAAOQ,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlN,QACf4M,UAAUC,cAAcQ,YAI1BxM,QAAQC,IACN,iHAKE6L,GAAUA,EAAOW,UACnBX,EAAOW,SAASN,KAMlBnM,QAAQC,IAAI,sCAGR6L,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUP,WAO5BpM,OAAM,SAAA4M,GACL3M,QAAQ2M,MAAM,4CAA6CA,M,OCzFjEC,IAASjE,OAAO,kBAAC,GAAD,MAAQkE,SAASC,eAAe,SDezC,SAAkBhB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIgB,IAAIvE,WAAwByC,OAAOQ,SAASpK,MACpD2L,SAAW/B,OAAOQ,SAASuB,OAIvC,OAGF/B,OAAOC,iBAAiB,QAAQ,WAC9B,IAAMW,EAAK,UAAMrD,WAAN,sBAEP+C,KAgEV,SAAiCM,EAAOC,GAEtCmB,MAAMpB,GACHK,MAAK,SAAAgB,GAEJ,IAAMC,EAAcD,EAASE,QAAQvD,IAAI,gBAEnB,MAApBqD,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CvB,UAAUC,cAAcuB,MAAMrB,MAAK,SAAAC,GACjCA,EAAaqB,aAAatB,MAAK,WAC7BjB,OAAOQ,SAASgC,eAKpB7B,GAAgBC,EAAOC,MAG1B/L,OAAM,WACLC,QAAQC,IACN,oEArFAyN,CAAwB7B,EAAOC,GAI/BC,UAAUC,cAAcuB,MAAMrB,MAAK,WACjClM,QAAQC,IACN,iHAMJ2L,GAAgBC,EAAOC,OCtC/BE,I","file":"static/js/main.73d947ae.chunk.js","sourcesContent":["const HISTORY_ROUTE = '/history';\nconst HOME_ROUTE = '/home';\nconst OPENING_ROUTE = '/';\nconst SIGN_UP_ROUTE = '/sign-up';\nconst SIGN_IN_ROUTE = '/sign-in';\nconst RESET_PASSWORD_ROUTE = '/reset-password';\nconst SETTINGS_ROUTE = '/settings';\n\nexport {HISTORY_ROUTE, HOME_ROUTE, RESET_PASSWORD_ROUTE, OPENING_ROUTE, SIGN_UP_ROUTE, SIGN_IN_ROUTE, SETTINGS_ROUTE};","import React, {Component} from 'react';\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {HOME_ROUTE} from \"../router/Routes\";\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: props.user\n        };\n        this.emailInput = React.createRef();\n        this.passwordInput = React.createRef();\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        const updatedUser = await this.state.userService\n            .signIn(this.emailInput.value, this.passwordInput.value)\n            .catch(e => {\n                console.log(e);\n                return null;\n            });\n        this.setState(state => ({\n            user: updatedUser\n        }));\n        this.props.history.push(HOME_ROUTE);\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control type=\"email\"\n                                          placeholder=\"Enter email\"\n                                          required\n                                          ref={(ref) => {\n                                              this.emailInput = ref\n                                          }}/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\"\n                                          placeholder=\"Password\"\n                                          required\n                                          ref={(ref) => {\n                                              this.passwordInput = ref\n                                          }}/>\n                        </Form.Group>\n                        <Button variant=\"primary\" href={HOME_ROUTE} type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport {SIGN_UP_ROUTE} from \"../router/Routes\";\n\nfunction SignUpPrompt() {\n    return (\n        <Row>\n            <Col>\n                <div>Don't have an account?</div>\n                <Link to={SIGN_UP_ROUTE}>Sign Up</Link>\n            </Col>\n        </Row>\n    );\n}\n\nexport default SignUpPrompt;","import React, {Component} from 'react';\nimport SignIn from \"./SignIn\";\nimport {Col, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport {RESET_PASSWORD_ROUTE} from \"../router/Routes\";\nimport SignUpPrompt from \"./SignUpPrompt\";\n\nclass Opening extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: props.user\n        };\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col>\n                    <h1>StepUp</h1>\n                    <SignIn user={this.state.user}/>\n                    <Link to={RESET_PASSWORD_ROUTE}>Forgot Password?</Link>\n                    <SignUpPrompt/>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default Opening;","import React from 'react';\nimport {Button, Col, Row} from \"react-bootstrap\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faChartBar, faCog, faHome} from '@fortawesome/free-solid-svg-icons'\nimport {HISTORY_ROUTE, HOME_ROUTE, SETTINGS_ROUTE} from \"./Routes\";\n\nfunction Navigation() {\n    return (\n        <Row>\n            <Col>\n                <Row>\n                    <Col>\n                        <Button href={HOME_ROUTE} variant=\"light\">\n                            <Row>\n                                <Col>\n                                    <FontAwesomeIcon icon={faHome}/>\n                                </Col>\n                                <Col>\n                                    Home\n                                </Col>\n                            </Row>\n                        </Button>\n                    </Col>\n                </Row>\n            </Col>\n            <Col>\n                <Row>\n                    <Col>\n                        <Button href={HISTORY_ROUTE} variant=\"light\">\n                            <Row>\n                                <Col>\n                                    <FontAwesomeIcon icon={faChartBar}/>\n                                </Col>\n                                <Col>\n                                    History\n                                </Col>\n                            </Row>\n                        </Button>\n                    </Col>\n                </Row>\n            </Col>\n            <Col>\n                <Row>\n                    <Col>\n                        <Button href={SETTINGS_ROUTE} variant=\"light\">\n                            <Row>\n                                <Col>\n                                    <FontAwesomeIcon icon={faCog}/>\n                                </Col>\n                                <Col>\n                                    Settings\n                                </Col>\n                            </Row>\n                        </Button>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n}\n\nexport default Navigation;","import React from 'react';\nimport {CircularProgressbar} from 'react-circular-progressbar';\n\nfunction DailyCount(props) {\n    return (\n        <CircularProgressbar percentage={100} text={props.steps}/>\n    );\n}\n\nexport default DailyCount;","const DEFAULT_GOAL = 10000;\n\nclass User {\n    constructor(name, email, password) {\n        this.name = name;\n        this.email = email;\n        this.password = password;\n        this.goal = 10000;\n        this.steps = []; // define steps as a map of date to number\n    }\n}\n\nclass StepEntry {\n    constructor() {\n        this.date = new Date();\n        this.stepCount = 0;\n    }\n\n    increment() {\n        this.stepCount += 1;\n    }\n}\n\nfunction userFrom(user) {\n    if (!user) {\n        user = {};\n    }\n    return {\n        name: user.name,\n        email: user.email,\n        password: user.password,\n        goal: user.goal,\n        steps: user.steps\n    }\n}\n\n\n\n\nexport {User, StepEntry, userFrom, DEFAULT_GOAL};","import React from 'react';\nimport {CircularProgressbar} from 'react-circular-progressbar';\nimport {DEFAULT_GOAL} from \"../user/User\";\n\nfunction enrichProps(props) {\n    const steps = props.steps ? props.steps : 0;\n    const goal = props.goal ? props.goal : DEFAULT_GOAL;\n    return {\n        steps: steps,\n        goal: goal,\n        ratio: steps / goal,\n        stepsToGoal: goal - steps\n    };\n}\n\nfunction GoalProgress(props) {\n    const p = enrichProps(props);\n    return (\n        <CircularProgressbar percentage={p.ratio} text={p.stepsToGoal}\n                             circleRatio={p.ratio} value={p.goal}/>\n    );\n}\n\nexport default GoalProgress;","import React, {Component} from 'react';\nimport {Col, Overlay, Popover, PopoverContent, PopoverTitle, Row} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport {SETTINGS_ROUTE} from \"../router/Routes\";\nimport {DEFAULT_GOAL} from \"./User\";\n\n// TODO add popover to users without goals\nconst popover = (\n    <Popover id=\"popover-basic\">\n        <PopoverTitle as=\"h3\">Let's set some goals!</PopoverTitle>\n        <PopoverContent>\n            Looks like you don't have a daily step goal defined. Let's change that by going to <Link\n            to={SETTINGS_ROUTE}>settings</Link>.\n        </PopoverContent>\n    </Popover>\n);\n\nclass Goal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: props.user,\n            goal: null\n        };\n        this.getGoal = this.getGoal.bind(this);\n    }\n\n    // always returns a valid goal\n    getGoal() {\n        return isValidGoal(this.goal) ? this.goal : DEFAULT_GOAL;\n    }\n\n\n    render() {\n        return (\n            <Row className={\"\"}>\n                <Col className={\"\"}>\n                    <div>\n                        Goal: {this.getGoal()}\n                    </div>\n                    <Overlay>\n                    </Overlay>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nfunction isValidGoal(goal) {\n    return goal && Number.isInteger(goal);\n}\n\n\nexport default Goal;","import React, {Component} from 'react';\nimport {Button, Col, Row} from \"react-bootstrap\";\nimport {OPENING_ROUTE} from \"../router/Routes\";\nimport Goal from \"./Goal\";\n\nclass UserHeading extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: props.user\n        };\n        this.getName = this.getName.bind(this);\n    }\n\n    getName() {\n        return this.state && this.state.name ? this.state.name : \"Scott\";\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col className={\"m-3\"}>\n                    <Row>\n                        <Col>\n                            <Row>\n                                <Col>\n                                   {this.getName()}\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Goal user={this.state.user}/>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col className={\"w-25\"}>\n                            <Button href={OPENING_ROUTE}>Sign Out</Button>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default UserHeading;","import React, {Component} from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport Navigation from \"../router/Navigation\";\nimport 'react-circular-progressbar/dist/styles.css';\nimport DailyCount from \"./DailyCount\";\nimport GoalProgress from \"./GoalProgress\";\nimport UserHeading from \"../user/UserHeading\";\n\n// TODO extract these from user\nconst mockGoal = 7000;\nconst mockSteps = 5251;\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: props.user\n        };\n        this.getName = this.getName.bind(this);\n    }\n\n    getName() {\n        return this.state && this.state.name ? this.state.name : \"Scott\";\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col className={\"m-3\"}>\n                    <Row>\n                        <Col className={\"p-3\"}>\n                            <UserHeading user={this.state.user}/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={4} className={\"w-50 p-3\"}>\n                            <GoalProgress goal={mockGoal} steps={mockSteps}/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={4} className={\"w-75 p-3 span-4 offset-4\"}>\n                            <DailyCount steps={mockSteps}/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className={\"p-3\"}>\n                            <Navigation/>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default Home;","function stepEntry() {\n    return stepEntryUsing(new Date(), 0);\n}\n\nfunction stepEntryUsing(date, stepCount) {\n    return {\n        date: date,\n        stepCount: stepCount\n    };\n}\n\nfunction stepEntryFrom(entry) {\n    if (!entry) {\n        return stepEntry();\n    } else {\n        return {\n            date: entry.date ? entry.date : new Date(),\n            stepCount: entry.stepCount ? entry.stepCount : 0\n        };\n    }\n}\n\nexport {stepEntry, stepEntryUsing, stepEntryFrom};","import React from 'react';\nimport {HorizontalGridLines, VerticalBarSeries, XAxis, XYPlot, YAxis} from \"react-vis\";\nimport {stepEntryUsing} from \"../user/StepEntry\";\n\nconst mockStepEntries = [\n    stepEntryUsing(dateMinusDays(6), 4828),\n    stepEntryUsing(dateMinusDays(5), 2237),\n    stepEntryUsing(dateMinusDays(4), 5712),\n    stepEntryUsing(dateMinusDays(3), 6493),\n    stepEntryUsing(dateMinusDays(2), 6376),\n    stepEntryUsing(dateMinusDays(1), 7210),\n    stepEntryUsing(dateMinusDays(0), 6019)\n];\n\nfunction dateMinusDays(days) {\n    let date = new Date();\n    let day = date.getDate();\n    date.setDate(day - days);\n    return date;\n}\n\nconst days = ['Sun', 'Mon', 'Tues', 'Wed', 'Thurs', 'Fri', 'Sat'];\n\nfunction StepChart(props) {\n    let steps = props.steps ? props.steps : mockStepEntries;\n    return (\n        <div>\n            Steps\n            <XYPlot height={200} width={320} xType=\"ordinal\"\n                    margin={{left: 60}}>\n                <XAxis/>\n                <YAxis/>\n                <HorizontalGridLines/>\n                <VerticalBarSeries data={extractUserData(steps)}/>\n            </XYPlot>\n        </div>\n    );\n}\n\nfunction extractUserData(steps) {\n    return Array.isArray(steps) ?\n        steps.filter(isValidEntry).map(toDatum) : [];\n}\n\nconst isValidEntry = e => e && e.date && e.stepCount;\n\nconst toDatum = (entry) => {\n    let data\n        = {x: days[entry.date.getDay()], y: entry.stepCount};\n    console.log(data);\n    return data;\n};\n\nexport default StepChart;","import React from 'react';\nimport {CircularProgressbar} from 'react-circular-progressbar';\nimport {Col, Row} from \"react-bootstrap\";\n\nconst reducer = (sum, value) => sum + value;\n\nconst isValidEntry = e => e && e.stepCount;\n\n\nfunction averageStepEntries(steps) {\n    const average = Array.isArray(steps) && steps.length > 0\n        ? steps.filter(isValidEntry)\n        .map(e => e.stepCount)\n        .reduce(reducer, 0) / steps.length\n        : 0;\n    console.log(average);\n    return average.toPrecision(4);\n}\n\nfunction AverageSteps(props) {\n    const average = averageStepEntries(props.steps);\n    return (\n        <Row>\n            <Col>\n                <Row>\n                    <Col className=\"offset-2 p-2\">\n                        Average Steps\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <CircularProgressbar text={average}/>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n}\n\nexport default AverageSteps;","import React from 'react';\nimport {CircularProgressbar} from 'react-circular-progressbar';\nimport {Col, Row} from \"react-bootstrap\";\n\nconst reducer = (x, y) => x > y ? x : y;\n\nconst isValidEntry = e => e && e.stepCount;\n\n\nfunction calulatePr(steps) {\n    const average = Array.isArray(steps) && steps.length > 0\n        ? steps.filter(isValidEntry)\n            .map(e => e.stepCount)\n            .reduce(reducer, 0)\n        : 0;\n    console.log(average);\n    return average.toPrecision(4);\n}\n\nfunction PersonalRecord(props) {\n    const pr = calulatePr(props.steps);\n    return (\n        <Row>\n            <Col>\n                <Row>\n                    <Col className=\"offset-1 p-2\">\n                        Personal Record\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <CircularProgressbar text={pr}/>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n    );\n}\n\nexport default PersonalRecord;","import React, {Component} from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport UserHeading from \"../user/UserHeading\";\nimport StepChart from \"./StepChart\";\nimport AverageSteps from \"./AverageSteps\";\nimport PersonalRecord from \"./PersonalRecord\";\nimport Navigation from \"../router/Navigation\";\n\n\nclass History extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: props.user\n        }\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col className={\"m-3 p-3\"}>\n                    <Row>\n                        <Col>\n                            <UserHeading user={this.state.user}/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className={\"p-3\"}>\n                            <StepChart/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={4} className={\"w-50 p-1\"}>\n                            <AverageSteps steps={this.state.user.steps}/>\n                        </Col>\n                        <Col sm={4} className={\"w-50 p-1\"}>\n                            <PersonalRecord steps={this.state.user.steps}/>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col className={\"p-3\"}>\n                            <Navigation/>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default History;","import React, {Component} from 'react';\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {OPENING_ROUTE} from \"../router/Routes\";\n\nclass ResetPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: props.user,\n            userService: props.userService\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async handleSubmit(event) {\n        const form = event.currentTarget;\n        const updatedUser = await this.userService.resetPassword(form.formBasicEmail, form.formBasicPassword);\n        this.setState(state => ({\n            user: updatedUser\n        }));\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col>\n                    <div>This is the reset password page</div>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" required/>\n                            <Form.Text className=\"text-muted\">\n                                We'll never share your email with anyone else unless they're paying.\n                            </Form.Text>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" required/>\n                        </Form.Group>\n                        <Button variant=\"primary\" href={OPENING_ROUTE} type=\"submit\">\n                            Reset Password\n                        </Button>\n                    </Form>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default ResetPassword;","import React, {Component} from 'react';\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\nimport {OPENING_ROUTE} from \"../router/Routes\";\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: props.user,\n            userService: props.userService ? props.userService : sneakyThrows()\n        };\n        this.nameInput = React.createRef();\n        this.emailInput = React.createRef();\n        this.passwordInput = React.createRef();\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async handleSubmit(e) {\n        //e.preventDefault();\n        const updatedUser = await this.state.userService\n            .signUp(this.nameInput.value, this.emailInput.value, this.passwordInput.value)\n            .catch(e => {\n                console.log(e);\n            });\n        if (updatedUser) {\n            this.setState(state => ({\n                user: updatedUser\n            }));\n        } else {\n            alert(\"Perhaps you should try again later...\")\n        }\n        this.props.history.push({OPENING_ROUTE});\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group controlId=\"formName\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control type=\"text\"\n                                          placeholder=\"Enter your name\"\n                                          required\n                                          ref={(ref) => {\n                                              this.nameInput = ref\n                                          }}/>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control type=\"email\"\n                                          placeholder=\"Enter email\"\n                                          required\n                                          ref={(ref) => {\n                                              this.emailInput = ref\n                                          }}/>\n                            <Form.Text className=\"text-muted\">\n                                We'll never share your email with anyone else unless they're paying.\n                            </Form.Text>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\"\n                                          placeholder=\"Password\"\n                                          required\n                                          ref={(ref) => {\n                                              this.passwordInput = ref\n                                          }}/>\n                        </Form.Group>\n                        <Button variant=\"primary\" href={OPENING_ROUTE} type=\"submit\" onClick={this.handleSubmit}>\n                            Submit\n                        </Button>\n                    </Form>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nfunction sneakyThrows() {\n    throw Error(\"Illegal State! SignUp must have a UserService\");\n}\n\n\nexport default SignUp;","import React from 'react';\nimport {Col, Row} from \"react-bootstrap\";\n\nexport default function ConfigItem(props) {\n    return (\n        <Row>\n            <Col>\n                <form onSubmit={props.handleSubmit}>\n                    <Row>\n                        <Col>\n                            <label>\n                                {props.label}:\n                                <input type=\"text\" value={props.value} onChange={props.handleChange}/>\n                            </label>\n                        </Col>\n                        <Col>\n                            <input type=\"submit\" value=\"Update\"/>\n                        </Col>\n                    </Row>\n                </form>\n            </Col>\n        </Row>\n    );\n}","import React, {Component} from 'react';\nimport {Col, Row} from \"react-bootstrap\";\nimport {DEFAULT_GOAL, userFrom} from \"../user/User\";\nimport Navigation from \"../router/Navigation\";\nimport ConfigItem from \"./ConfigItem\";\n\nconst GOAL_LABEL = \"Daily Step Goal\";\n\nconst DATA_RETENTION_LABEL = \"Data retention\";\n\nconst DEFAULT_DATA_RENTENTION_IN_DAYS = 7;\n\nclass Settings extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            goal: props.user && props.user.goal ? props.user.goal : DEFAULT_GOAL,\n            dataRetention: props.user && props.user.dataRetention ? props.user.dataRetention : DEFAULT_DATA_RENTENTION_IN_DAYS,\n            user: props.user,\n            userService: props.userService\n        };\n\n        this.handleGoalChange = this.handleGoalChange.bind(this);\n        this.handleGoalSubmit = this.handleGoalSubmit.bind(this);\n        this.handleRetentionChange = this.handleRetentionChange.bind(this);\n        this.handleRetentionSubmit = this.handleRetentionSubmit.bind(this);\n    }\n\n    handleGoalChange(event) {\n        this.setState({goal: event.target.value});\n    }\n\n    handleGoalSubmit(event) {\n        alert('A name was submitted: ' + this.state.goal);\n        let updatedUser = userFrom(this.state.user);\n        updatedUser.goal = this.state.goal;\n        this.userService.save(updatedUser);\n        event.preventDefault();\n    }\n\n    handleRetentionChange(event) {\n        this.setState({dataRetention: event.target.value});\n    }\n\n    handleRetentionSubmit(event) {\n        alert('A name was submitted: ' + this.state.goal);\n        let updatedUser = userFrom(this.state.user);\n        updatedUser.dataRetention = this.state.dataRetention;\n        this.userService.save(updatedUser);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <Row>\n                <Col>\n                    <ConfigItem label={GOAL_LABEL} value={this.state.goal} handleSubmit={this.handleGoalSubmit}\n                                onChange={this.handleGoalChange}/>\n                    <ConfigItem label={DATA_RETENTION_LABEL} value={this.state.dataRetention + \" days\"}\n                                handleSubmit={this.handleRetentionSubmit}\n                                onChange={this.handleRetentionChange}/>\n                    <Row>\n                        <Col className={\"p-3\"}>\n                            <Navigation/>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default Settings;","import {BrowserRouter, Route} from \"react-router-dom\";\nimport React, {Component} from 'react';\nimport * as routes from \"./Routes\";\nimport Opening from \"../login/Opening\";\nimport Home from \"../home/Home\";\nimport History from \"../history/History\";\nimport {Col, Row} from \"react-bootstrap\";\nimport ResetPassword from \"../login/ResetPassword\";\nimport SignUp from \"../login/SignUp\";\nimport SignIn from \"../login/SignIn\";\nimport Settings from \"../settings/Settings\";\n\nclass StepUpRouter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: props.user,\n            userService: props.userService ? props.userService : sneakyThrows()\n        };\n    }\n\n    render() {\n        return (\n            <Row basename={process.env.PUBLIC_URL}>\n                <Col>\n                    <BrowserRouter>\n                        <Route exact path={routes.OPENING_ROUTE} render={(props) => <Opening {...props} />}/>\n                        <Route path={routes.SIGN_UP_ROUTE}\n                               render={(props) => <SignUp {...props} userService={this.state.userService}/>}/>\n                        <Route path={routes.SIGN_IN_ROUTE}\n                               render={(props) => <SignIn {...props} userService={this.state.userService}/>}/>\n                        <Route path={routes.RESET_PASSWORD_ROUTE} render={(props) => <ResetPassword {...props} />}/>\n                        <Route path={routes.HOME_ROUTE}\n                               render={(props) => <Home {...props} />}/>\n                        <Route path={routes.HISTORY_ROUTE}\n                               render={(props) => <History {...props} user={this.state.user}/>}/>\n                        <Route path={routes.SETTINGS_ROUTE}\n                               render={(props) => <Settings {...props} user={this.state.user}\n                                                            userService={this.state.userService}/>}/>\n                    </BrowserRouter>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nfunction sneakyThrows() {\n    throw Error(\"Illegal State! StepUpRouter must have a UserService\");\n}\n\nexport default StepUpRouter;","import * as firebase from \"firebase/app\";\n\n// Add the Firebase services that you want to use\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\n\nconst usersPath = 'users';\n\n// const mockUser = {\n//     name: \"someone\",\n//     email: \"someone@mail.com\",\n//     password: \"secret\"\n// };\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCGu6VPCdm9VofmdK-ZFEfxRbpH3R92Ao0\",\n    authDomain: \"step-up-24f08.firebaseapp.com\",\n    databaseURL: \"https://step-up-24f08.firebaseio.com\",\n    projectId: \"step-up-24f08\",\n    storageBucket: \"step-up-24f08.appspot.com\",\n    messagingSenderId: \"557965425780\",\n    appId: \"1:557965425780:web:a8fcab2c215d843232e521\",\n    measurementId: \"G-EJKYXSE81E\"\n};\n\n\nclass UserRepository {\n    constructor() {\n        firebase.initializeApp(firebaseConfig);\n        this.db =  firebase.firestore();\n    }\n\n    async save(user) {\n        let data = map(user);\n        const saved = await this.db.collection(usersPath).doc(user.email).set(data);\n        console.log(saved);\n        return saved;\n    }\n\n    findByEmail(email) {\n        return this.db.collection(usersPath).doc(email).get().toJSON();\n    }\n}\n\nfunction map(user) {\n    return user ? {\n            name: user.name,\n            email: user.email,\n            password: user.password\n        }\n        : {};\n}\n\nexport default UserRepository;","const DEFAULT_NUMBER_OF_DAYS = 7;\n\nclass UserService {\n\n    constructor(props) {\n        this.user = null;\n        this.userRepository = props.userRepository ? props.userRepository : sneakyThrows();\n    }\n\n    // returns a Promise<User>\n    async signUp(name, email, password) {\n        console.log(`signing up ${name} ${email} ${password}`);\n        ensureEmailAndPassword(email, password);\n        let user = {name: name, email: email, password: password};\n        await this.userRepository.save(user);\n        return user;\n    }\n\n    async signIn(email, password) {\n        ensureEmailAndPassword(email, password);\n        let user = await this.userRepository.findByEmail(email);\n        validateCredentials(user, {password: password});\n        return user;\n    }\n\n    // resets user.password if props.password is not empty\n    async resetPassword(email, password) {\n        if (isEmpty(password === null)) {\n            throw Error(\"new password must be valued to reset password.\");\n        }\n        let user = await this.userRepository.findByEmail(email);\n        if (user === null) {\n            throw Error(\"User does not exist in the system. Would you like to sign up?\");\n        }\n        user.password = password;\n        return this.save(user);\n    }\n\n    // saves user and returns it after first validating for not null\n    save(user) {\n        if (user === null) {\n            throw Error(\"Illegal state. Unable to save null user.\");\n        }\n        return this.userRepository.save(user);\n    }\n\n    // returns Array<UserEntry>\n    getStepHistory(user, numberOfDays) {\n        if (user === null) {\n            throw Error(\"Unable to find step history null user.\");\n        }\n        let steps = this.userRepository.findByEmail(user.email).steps;\n        return Array.isArray(steps) ? steps.slice(numberOfDays ? numberOfDays : DEFAULT_NUMBER_OF_DAYS) : [];\n    }\n\n}\n\nfunction ensureEmailAndPassword(email, password) {\n    if (isEmpty(email) || isEmpty(password)) {\n        throw Error(\"Email and password must not be empty in order to log in\", email, password);\n    }\n}\n\nfunction validateCredentials(user, credentials) {\n    if (user.password !== credentials.password) {\n        throw Error(\"Invalid credentials. Username or password do not match\");\n    }\n}\n\nfunction isEmpty(s) {\n    return !(s) && s !== '';\n}\n\nfunction sneakyThrows() {\n    throw Error(\"Illegal State! UserService must have a UserRepository\");\n}\n\nexport default UserService;","import UserRepository from \"../repository/UserRepository\";\nimport UserService from \"./UserService\";\n\nconst userServiceProps = {\n    userRepository: new UserRepository()\n};\nconst userService = new UserService(userServiceProps);\n\nfunction getUserServiceInstance() {\n    return userService;\n}\n\nexport default getUserServiceInstance;","import {stepEntry, stepEntryFrom} from \"../user/StepEntry\";\nimport {userFrom} from \"../user/User\";\n\nfunction incrementUserStepCount(user) {\n    let userCopy = userFrom(user);\n    const stepEntry = getLatestStepEntry(user);\n    const updatedEntry = increment(stepEntry);\n    return replaceLatestStepEntry(userCopy, updatedEntry);\n}\n\nfunction getLatestStepEntry(user) {\n    if (user && user.steps) {\n        const length = user.steps.length;\n        return stepEntryFrom(user.steps[length - 1]);\n    }\n    return stepEntry();\n}\n\nfunction replaceLatestStepEntry(user, updatedEntry) {\n\n}\n\nfunction increment(entry) {\n    let entryCopy = stepEntryFrom(entry);\n    entryCopy.stepCount = entryCopy.stepCount + 1;\n    return entryCopy\n}\n\nexport {incrementUserStepCount};\n\n","import React, {Component} from 'react';\nimport './App.css';\nimport StepUpRouter from \"./router/StepUpRouter\";\nimport {Container} from \"react-bootstrap\";\nimport getUserServiceInstance from \"./user/UserServiceFactory\";\nimport {stepEntry} from \"./user/StepEntry\";\nimport {incrementUserStepCount} from \"./pedometer/Pedometer\";\n\nconst DEVICE_STEP_EVENT_TYPE = 'deviceorientation';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {steps: [stepEntry()]},\n            userService: getUserServiceInstance()\n        };\n        if (this.state.userService === null) {\n            throw Error(\"Illegal state! App must have a UserService\");\n        }\n        this.registerStep = this.registerStep.bind(this);\n        window.addEventListener(DEVICE_STEP_EVENT_TYPE,\n            event => this.registerStep(event));\n    }\n\n    registerStep(event) {\n        console.log(event.alpha + ' : ' + event.beta + ' : ' + event.gamma);\n        this.setState({\n            user: incrementUserStepCount(this.state.user)\n        });\n    }\n\n    render() {\n        return (\n            <Container>\n                <StepUpRouter userService={this.state.userService} user={this.state.user}/>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}